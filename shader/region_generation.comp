#version 460
#include "voxel.glsl"
#include "perlin.glsl"

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(set = 0, binding = 0, r8ui) writeonly uniform uimage3D voxel_image;
layout(set = 0, binding = 1) uniform uniform_t {
    ivec3 region_position;
};

void main() {
    uvec3 voxel_position = gl_GlobalInvocationID;
    ivec3 voxel_image_position = ivec3(voxel_position);

    ivec3 voxel_world_position = region_position + voxel_image_position;

    float value = perlinNoise(0.01 * vec2(voxel_world_position.x, voxel_world_position.z), 1, 6, 0.5, 2.0, 0x578437ad);
    value = (value + 1.0) * 0.5;
    int height = int(value * 16.0);

    if (voxel_world_position.y > height) {
        imageStore(voxel_image, voxel_image_position, uvec4(VOXEL_TYPE_AIR));
    } else if (voxel_world_position.y == height) {
        imageStore(voxel_image, voxel_image_position, uvec4(VOXEL_TYPE_GRASS));
    } else {
        imageStore(voxel_image, voxel_image_position, uvec4(VOXEL_TYPE_DIRT));
    }
}