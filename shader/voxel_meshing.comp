#version 460

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

struct voxel_vertex_t {
    vec3 position;
    vec2 texel_coord;
};

layout(set = 0, binding = 0, r32ui) readonly uniform uimage3D voxel_image;

layout(set = 0, binding = 1) writeonly buffer out_t {
    voxel_vertex_t vertices[];
};

void main() {
    vertices[gl_GlobalInvocationID.x] = voxel_vertex_t(vec3(-1.0, -1.0, 0.0), vec2(0.0, 1.0));
    vertices[gl_GlobalInvocationID.x + 1] = voxel_vertex_t(vec3(1.0, -1.0, 0.0), vec2(1.0, 1.0));
    vertices[gl_GlobalInvocationID.x + 2] = voxel_vertex_t(vec3(1.0, 1.0, 0.0), vec2(1.0, 0.0));
    vertices[gl_GlobalInvocationID.x + 3] = voxel_vertex_t(vec3(1.0, 1.0, 0.0), vec2(1.0, 0.0));
    vertices[gl_GlobalInvocationID.x + 4] = voxel_vertex_t(vec3(-1.0, 1.0, 0.0), vec2(0.0, 0.0));
    vertices[gl_GlobalInvocationID.x + 5] = voxel_vertex_t(vec3(-1.0, -1.0, 0.0), vec2(0.0, 1.0));
}